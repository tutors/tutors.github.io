<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[آموزش روش های توسعه نرم افزار]]></title>
  <link href="http://tutors.github.io/atom.xml" rel="self"/>
  <link href="http://tutors.github.io/"/>
  <updated>2013-10-17T16:19:28+03:30</updated>
  <id>http://tutors.github.io/</id>
  <author>
    <name><![CDATA[حسین زلفی]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ انواع تگ های html]]></title>
    <link href="http://tutors.github.io/blog/2013/10/17/html-tags/"/>
    <updated>2013-10-17T15:28:00+03:30</updated>
    <id>http://tutors.github.io/blog/2013/10/17/html-tags</id>
    <content type="html"><![CDATA[<h2>تگ head چیست؟</h2>

<p>در &lt;head&gt; توضیحاتی راجع به html ایجاد شده وجود دارد. اطلاعاتی که واقعا در مرورگر
 نشان داده نمی شوند. مثلاً اینکه عنوان یک صفحه چیست.</p>

<div class="highlight"><pre><code class="html"><span class="nt">&lt;title&gt;</span>This is a test<span class="nt">&lt;/title&gt;</span>
</code></pre></div>


<p>آنچه در &lt;head&gt; تعریف می شود متا محتواست مثلاً عنوان. برای مثال یک موتور جستجوگر مانند
 گوگل می خواهد بداند که موضوع سایت ما چیست. در این صورت به سراغ head
می رود. در واقع ما باید یک سری اطلاعات راجع به سایت را در قسمت &lt;head&gt; قرار دهیم.</p>

<h2>تگ body چیست؟</h2>

<p>آنچه در &lt;body&gt; قرار دارد در واقع محتوای اصلی سایت ما را مشخص می کند.
هرچه در این قسمت نوشته شود عیناً و بدون هیچ style خاصی در صفحه وب نمایش داده می شود.</p>

<h2>ساختار مقاله ای گونه HTML</h2>

<p>در این راستا سه تگ &lt;h1&gt;، &lt;h2&gt; و &lt;p&gt; وجود دارند.
 تگ &lt;h1&gt; نشان دهنده عنوان شماره 1، تگ &lt;h2&gt; نشان دهنده عنوان شماره 2
و تگ &lt;p&gt; نشان دهنده پاراگراف می باشد. برای ایجاد یک سایت مقاله گونه از این
تگ ها استفاده
می شود.</p>

<h2>تگ ها و خاصیت آنها</h2>

<p>در HTML می توان به برخی از تگ ها خاصیت داد.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="html"><span class="nt">&lt;h1</span> <span class="na">style =</span><span class="err"> </span><span class="s">&quot;color:red;&quot;</span><span class="nt">&gt;</span>HTML<span class="nt">&lt;/h1&gt;</span>
</code></pre></div>


<h3>تگ های معنایی</h3>

<p>تگ معنایی یعنی تگی که مفهوم متنی که داخل آن تگ است را نشان می دهد.
مثلاً تگ h1 نشان می دهد که این تگ header است. تگ p نشان می دهد که این تگ پاراگراف است.</p>

<h3>تگ های فرمت</h3>

<p>این تگ ها معنای خاصی را نشان نمی دهند.</p>

<p><strong>مثال:</strong></p>

<p>&lt;em&gt;: نشان دهنده اینکه متنی مهم است</p>

<p>&lt;small&gt;: متن را کوچکتر از سایز اصلی متن نشان می دهد</p>

<p>&lt;b&gt;: متن را bold می کند.</p>

<p>&lt;i&gt;: متن را italic می کند.</p>

<p>&lt;sub&gt;: متن را زیر نویس می کند. مثلاً<sub>2</sub>xرا به صورت زیر نشان می دهیم.</p>

<div class="highlight"><pre><code class="html">x<span class="nt">&lt;sub&gt;</span>2<span class="nt">&lt;/sub&gt;</span>
</code></pre></div>


<p>&lt;sup&gt;:   متن را به صورت توان دار نشان می دهد.مثلاً<sup>2</sup>xرا به صورت زیر نشان می دهیم</p>

<div class="highlight"><pre><code class="html">x<span class="nt">&lt;sup&gt;</span>2<span class="nt">&lt;/sup&gt;</span>
</code></pre></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[متغیر POST_ $ در PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-post-variable/"/>
    <updated>2013-08-21T17:28:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-post-variable</id>
    <content type="html"><![CDATA[<h2>متغیر POST_ $</h2>

<p>متغیر از پیش تعریف شده POST_ $ به منظور جمع آوری مقادیر یک فرم که با متد method=&ldquo;post&rdquo; مشخص شده اند، به کار می رود.</p>

<p>اطلاعات فرستاده شده توسط متد post برای دیگران قابل رویت نیستند  و هیچ محدودیتی به حجم اطلاعاتی که می توان فرستاد، ندارد.</p>

<p><strong>نکته:</strong></p>

<p> به هر حال ماکزیمم سایزی برای متد post وجود دارد، که به صورت پیش فرض8mb می باشد.</p>

<p>می توان این مقدار را با تغییر setting موجود در فایل php.ini در قسمت post-max-size عوض کرد.</p>

<h2>چه موقع از متد post استفاده می کنیم؟</h2>

<p>هر زمان به جز زمانی که بخواهیم صفحه خود را book mark کنیم.</p>

<h2>متغیر REQUSET_ $</h2>

<p>متغیر از پیش تعریف شده REQUSET _$ شامل مقادیر مربوط به GET _ $ و  POST _ $ و COOKIE _ $ می باشد.</p>

<p>این متغیر می تواند به منظور جمع آوری داده فرستاده شده از هر دو متد  post و get استفاده شود.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[متغیر GET_ $ در PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-get-variable/"/>
    <updated>2013-08-21T16:35:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-get-variable</id>
    <content type="html"><![CDATA[<p>متغیر از پیش تعریف شده GET_ $ به منظور جمع آوری مقادیر یک فرم که با متد method=&ldquo;get&rdquo; مشخص شده اند، به کار می رود.</p>

<p> به عبارت دیگر این متغیر مقادیری را در یک فرم با متد method=&ldquo;get&rdquo; مشخص شده اند را جمع آوری می کند.</p>

<p>اطلاعات فرستاده شده توسط متد GET برای هرکسی قابل رویت هستند ( در منوی آدرس  هر مرورگر دیده می شود).</p>

<p> اطلاعات فرستاده شده توسط متد GET محدود به حجم اطلاعاتی است که فرستاده می شوند.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="html"><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;welcome.php&quot;</span> <span class="na">method=</span><span class="s">&quot;get&quot;</span><span class="nt">&gt;</span>
Name: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;fname&quot;</span><span class="nt">&gt;</span>
Age: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;age&quot;</span><span class="nt">&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span><span class="nt">&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div>


<p>هنگامی که کاربر بر روی دکمه submit کلیک می کند، URL فرستاده شده به سرور مشابه زیر خواهد بود:</p>

<div class="highlight"><pre><code class="html">Welcome <span class="cp">&lt;?php echo $_GET[&quot;fname&quot;]; ?&gt;</span>.<span class="nt">&lt;br&gt;</span>
You are <span class="cp">&lt;?php echo $_GET[&quot;age&quot;]; ?&gt;</span> years old!
</code></pre></div>


<h2>چه موقع از متد get استفاده می کنیم؟</h2>

<p>هنگامی که از متد method=&ldquo;get&rdquo; در فرم HTML استفاده می شود، تمامی متغیرها و نام آنها در URL نمایش داده می شوند.</p>

<p><strong>نکته:</strong></p>

<p> این متد هنگامی که می خواهید اطلاعاتی محرمانه مانند پسورد بفرستید نباید استفاده شود.</p>

<p>به هرحال از آنجائیکه در این متد متغیرها در URL نمایش داده می شوند،
می توان صفحات را نشانه گذاری  کرد و در بعضی حالات می تواند مفید باشد.</p>

<p><strong>نکته:</strong></p>

<p> متد get برای مقادیر بسیار بزرگ متغیرها مناسب نیست و نبایستی با مقادیر بیش از 2000  کاراکتر استفاده شود.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[فرم ها و ورودی کاربر]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-form-and-user-input/"/>
    <updated>2013-08-21T15:23:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-form-and-user-input</id>
    <content type="html"><![CDATA[<p>متغیرهای POST _ $  و GET _ $ به منظور بازیابی اطلاعات از فرم <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> (مانند ورودی کاربر) به کار می روند.</p>

<h2>مدیریت فرم ها در PHP</h2>

<p>مهمترین نکته ای که هنگام کار با فرم های HTML و PHP با آن برخورد می کنید،
این است که:</p>

<p> هر عنصر فرم در صفحه HTML به طور اتوماتیک در اسکریپت های PHP شما وجود خواهند داشت.</p>

<p><strong>مثال:</strong></p>

<p> مثال زیر شامل یک فرم HTML با دو فیلد برای ورود اطلاعات و یک دکمه می باشد.</p>

<div class="highlight"><pre><code class="html"><span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;body&gt;</span>

<span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;welcome.php&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
Name: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;fname&quot;</span><span class="nt">&gt;</span>
Age: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;age&quot;</span><span class="nt">&gt;</span>
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span><span class="nt">&gt;</span>
<span class="nt">&lt;/form&gt;</span>

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div>


<p>هنگامی که کاربر فرم بالا را پر کرده و روی دکمه submit کلیک می کند،</p>

<p> داده فرم به یک فایل PHP  به نام welcome.php فرستاده می شود.</p>

<p> کد فایل welcome.php مشابه زیر است:</p>

<div class="highlight"><pre><code class="php"><span class="x">&lt;html&gt;</span>
<span class="x">&lt;body&gt;</span>

<span class="x">Welcome </span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;fname&quot;</span><span class="p">];</span> <span class="cp">?&gt;</span><span class="x">!&lt;br&gt;</span>
<span class="x">You are </span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;age&quot;</span><span class="p">];</span> <span class="cp">?&gt;</span><span class="x"> years old.</span>

<span class="x">&lt;/body&gt;</span>
<span class="x">&lt;/html&gt;</span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">Welcome John!
You are 28 years old.
</code></pre></div>


<p>متغیرهای POST _ $  و GET _ $  در قسمت بعدی توضیح داده خواهند شد.</p>

<h2>اعتبار سنجی فرم</h2>

<p>لازم به ذکر است که کاربر باید داده های معتبر در فرم وارد کند.</p>

<p>اعتبارسنجی ورودی کاربر باید در مرورگر و در جای مناسب انجام گیرد (بوسیله اسکریپت های مشتری ).</p>

<p>اعتبارسنجی مرورگر سریع تر است و میزان لود سرور را کاهش می دهد.</p>

<p>هنگامی که کاربر داده وارد می کند شما باید اعتبارسنجی سرور  انجام داده و
مطمئن شوید که اطلاعات به پایگاه داده وارد شده اند.</p>

<p> یک روش مناسب برای اعتبارسنجی یک فرم بر روی سرور این است که:</p>

<p>فرم را به خود سرور بفرستید نه به یک صفحه دیگر.</p>

<p>سپس کاربر پیغام های خطا را در همان صفحه دریافت می کند و بنابراین یافتن خطا بسیار سریعتر انجام می گیرد.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Form <a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[حوزه متغيرهاي PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-variables-scope/"/>
    <updated>2013-08-21T14:59:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-variables-scope</id>
    <content type="html"><![CDATA[<p>حوزه يک متغير بخشي از يک اسکريپت است که متغير مي تواند درآن استفاده شود و يا به آن ارجاع داده شود.</p>

<p> در PHP چهار حوزه مختلف براي تعريف متغيرها وجود دارد:</p>

<ul>
<li>حوزه محلي<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
<li>حوزه عمومي<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li>
<li><sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>حوزه ايستا</li>
<li>حوزه پارامتر<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></li>
</ul>


<h2>حوزه محلي</h2>

<p>به متغيري که در يک تابع PHP تعريف مي شود، متغير محلي گفته مي شود.</p>

<p>متغير محلي فقط در داخل يک تابع قابل دسترسي مي باشد:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$x</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span> <span class="c1">// حوزه عمومي</span>

<span class="k">function</span> <span class="nf">myTest</span><span class="p">()</span>
<span class="p">{</span>
        <span class="k">echo</span> <span class="nv">$x</span><span class="p">;</span> <span class="c1">// حوزه محلي</span>
<span class="p">}</span>

<span class="nx">myTest</span><span class="p">();</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتيجه اجرا:</strong>
اين اسکريپت هيچ خروجي اي را نشان نمي دهد. زيرا دستور echo به يک متغير محلي x$ رجوع مي کند که در حوزه محلي مقدار دهي نشده است.</p>

<p><strong>نکته:</strong>
از آنجائيکه متغيرهاي محلي تنها در تابعي که در آن تعريف مي شوند، قابل استفاده هستند، شما مي توانيد در تابع هاي مختلف متغيرهايي با نام هاي يکسان داشته باشيد.</p>

<p>در واقع متغيرهاي محلي با خاتمه تابع، حذف مي شوند.</p>

<h2>حوزه عمومي</h2>

<p>متغيري که در خارج از توابع تعريف مي شود، عمومي است و داراي حوزه عمومي است.</p>

<p>متغيرهاي عمومي مي توانند در هر جاي اسکريپت (به جز در داخل بدنه تابع) تعريف شوند.</p>

<p>براي دستيابي به يک متغير عمومي در داخل تابع مي توانيد از کلمه کليدي global قبل از نام متغير استفاده کنيد.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$x</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span> <span class="c1">// global scope</span>
<span class="nv">$y</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span> <span class="c1">// global scope</span>

<span class="k">function</span> <span class="nf">myTest</span><span class="p">()</span>
<span class="p">{</span>
          <span class="k">global</span> <span class="nv">$x</span><span class="p">,</span><span class="nv">$y</span><span class="p">;</span>
           <span class="nv">$y</span><span class="o">=</span><span class="nv">$x</span><span class="o">+</span><span class="nv">$y</span><span class="p">;</span>
<span class="p">}</span> 

<span class="nx">myTest</span><span class="p">();</span> <span class="c1">// run function</span>
<span class="k">echo</span> <span class="nv">$y</span><span class="p">;</span> <span class="c1">// output the new value for variable $y</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتيجه اجرا:</strong></p>

<div class="highlight"><pre><code class="sh">15
</code></pre></div>


<p>PHP تمامي متغيرهاي عمومي را در يک آرايه به نام [GLOBALS[index$ ذخيره مي کند. Index نام متغير را در خود نگهداري مي کند.</p>

<p>اين آرايه مي تواند از طريق توابع مورد دسترسي واقع شود و توسط آن مي توان متغيرهاي عمومي را مستقيماً بروزرساني کرد.</p>

<p>براي نمونه، مي توان مثال بالا را به صورت زير بازنويسي نمود:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$x</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span>
<span class="nv">$y</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>

<span class="k">function</span> <span class="nf">myTest</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;y&#39;</span><span class="p">]</span><span class="o">=</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;x&#39;</span><span class="p">]</span><span class="o">+</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;y&#39;</span><span class="p">];</span>
<span class="p">}</span> 

<span class="nx">myTest</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$y</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتيجه اجرا:</strong></p>

<div class="highlight"><pre><code class="sh">15
</code></pre></div>


<h2>حوزه ايستا</h2>

<p>به طور کلي هنگامي که يک تابع کامل مي شود(به انتهاي تابع مي رسيم)، همه متغيرهاي مربوط به آن حذف مي شوند.</p>

<p>اما در برخي موارد شما مي خواهيد بعضي از متغيرهاي محلي حذف نشوند، تا بتوانيد در جاهاي ديگر برنامه از مقدار آن ها استفاده کنيد.</p>

<p>براي اين کار مي بايست هنگامي که براي اولين بار متغير را ايجاد مي کنيد، در جلوي نام آن از کلمه کليدي static استفاده کنيد.</p>

<p> در اينصورت هر بار که تابع فراخواني مي شود، آن متغير اطلاعاتي که در سري قبلي(در فراخواني قبلي تابع) داشته است در خود نگه مي دارد.</p>

<p>لازم به ذکر است که اين متغير هنوز براي تابع محلي مي باشد.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>

<span class="k">function</span> <span class="nf">myTest</span><span class="p">()</span>
<span class="p">{</span>
     <span class="k">static</span> <span class="nv">$x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
     <span class="k">echo</span> <span class="nv">$x</span><span class="p">;</span>
     <span class="nv">$x</span><span class="o">++</span><span class="p">;</span>
<span class="p">}</span>
<span class="nx">myTest</span><span class="p">();</span>
<span class="nx">myTest</span><span class="p">();</span>
<span class="nx">myTest</span><span class="p">();</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتيجه اجرا:</strong></p>

<div class="highlight"><pre><code class="sh">012
</code></pre></div>


<h2>حوزه پارامتر</h2>

<p>پارمتر، يک متغير محلي است که مقدارش توسط فراخواني کد<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>  به تابع فرستاده مي شود.</p>

<p> پارامترها، در ليست پارامتر<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup> ، به عنوان بخشي از تعريف تابع، تعريف مي شوند.</p>

<p>به پارامترها، آرگومان نيز گفته مي شود.(اطلاعات بيشتر در بخش توابع PHP آورده شده است)</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>

<span class="k">function</span> <span class="nf">myTest</span><span class="p">(</span><span class="nv">$x</span><span class="p">)</span>
<span class="p">{</span>
      <span class="k">echo</span> <span class="nv">$x</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">myTest</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتيجه اجرا:</strong></p>

<div class="highlight"><pre><code class="sh">5
</code></pre></div>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Local<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Global<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>Static<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>Parameter<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Calling code<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Parameter list<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[توابع PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-functions/"/>
    <updated>2013-08-21T14:36:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-functions</id>
    <content type="html"><![CDATA[<p>قدرت واقعی php برگرفته از توابع<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>  آن است.</p>

<p> در Php بیش از 7000 تابع از پیش ساخته شده  وجود دارد.</p>

<p> در این فصل نحوه ایجاد تابع در php توضیح داده خواهد شد.</p>

<p>برای جلوگیری از اینکه هنگامی که یک صفحه لود می شود، اسکریپت اجرا شود، می توانید اسکریپت را در یک تابع قرار دهید.</p>

<p> یک تابع زمانی اجرا می شود که آنرا فراخوانی کنید و شما می توانید تابع را در هرجایی از کد فراخوانی کنید.</p>

<h2>ایجاد تابع در PHP</h2>

<p>یک تابع زمانی اجرا می شود که آن را فراخوانی کنید.</p>

<p><strong>گرامر:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">functionName</span><span class="p">()</span>
<span class="p">{</span>
<span class="err">؛کدی</span> <span class="err">که</span> <span class="err">باید</span> <span class="err">اجرا</span> <span class="err">شود</span>
<span class="p">{</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<h3>اصولی راجع به توابع PHP:</h3>

<ul>
<li><p>به تابع نامی بدهید که نشاندهنده عملکرد تابع باشد.</p></li>
<li><p>نام تابع می تواند با یک حرف یا _ شروع شود (نه عدد).</p></li>
</ul>


<p><strong>مثال:</strong></p>

<p> تابع ساده ای که هنگامی که فراخوانی می شود، اسم را می نویسد.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">writeName</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">echo</span> <span class="s2">&quot;Kai Jim Refsnes&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="s2">&quot;My name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">();</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">My name is Kai Jim Refsnes
</code></pre></div>


<h2>اضافه کردن پارامتر به تابع</h2>

<p>برای اینکه یک تابع بتواند کارهای بیشتری انجام دهد، می توان به آن پارامتر اضافه نمود.</p>

<p> یک پارمتر مانند یک متغیر  است. پارامترها بعد از نام تابع و در داخل پرانتز نوشته می شوند.</p>

<p><strong>مثال1:</strong></p>

<p> مثال زیر نام های متفاوت و با نام خانوادگی یکسان را چاپ می کند.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">writeName</span><span class="p">(</span><span class="nv">$fname</span><span class="p">)</span>
<span class="p">{</span>
<span class="k">echo</span> <span class="nv">$fname</span> <span class="o">.</span> <span class="s2">&quot; Refsnes.&lt;br&gt;&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="s2">&quot;My name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">(</span><span class="s2">&quot;Kai Jim&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&quot;My sister&#39;s name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">(</span><span class="s2">&quot;Hege&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&quot;My brother&#39;s name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">(</span><span class="s2">&quot;Stale&quot;</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">My name is Kai Jim Refsnes.
My sister<span class="s1">&#39;s name is Hege Refsnes.</span>
<span class="s1">My brother&#39;</span>s name is Stale Refsnes.
</code></pre></div>


<p><strong>مثال2:</strong></p>

<p> تابعی با دو پارامتر</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">writeName</span><span class="p">(</span><span class="nv">$fname</span><span class="p">,</span><span class="nv">$punctuation</span><span class="p">)</span>
<span class="p">{</span>
<span class="k">echo</span> <span class="nv">$fname</span> <span class="o">.</span> <span class="s2">&quot; Refsnes&quot;</span> <span class="o">.</span> <span class="nv">$punctuation</span> <span class="o">.</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="s2">&quot;My name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">(</span><span class="s2">&quot;Kai Jim&quot;</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&quot;My sister&#39;s name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">(</span><span class="s2">&quot;Hege&quot;</span><span class="p">,</span><span class="s2">&quot;!&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&quot;My brother&#39;s name is &quot;</span><span class="p">;</span>
<span class="nx">writeName</span><span class="p">(</span><span class="s2">&quot;Ståle&quot;</span><span class="p">,</span><span class="s2">&quot;?&quot;</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">My name is Kai Jim Refsnes.
My sister<span class="s1">&#39;s name is Hege Refsnes!</span>
<span class="s1">My brother&#39;</span>s name is Ståle Refsnes?
</code></pre></div>


<h2>مقادیر بازگشتی در تابع</h2>

<p>برای اینکه یک تابع بتواند مقدار بازگشتی داشته باشد، می توان از عبارت return استفاده نمود.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">add</span><span class="p">(</span><span class="nv">$x</span><span class="p">,</span><span class="nv">$y</span><span class="p">)</span>
<span class="p">{</span>
<span class="nv">$total</span> <span class="o">=</span> <span class="nv">$x</span><span class="o">+</span><span class="nv">$y</span><span class="p">;</span>
<span class="k">return</span> <span class="nv">$total</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="s2">&quot;1 + 16 = &quot;</span> <span class="o">.</span> <span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">16</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">1 + <span class="nv">16</span> <span class="o">=</span> 17
</code></pre></div>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>functions<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مرتب سازی آرایه ها در PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-sorting-arrays/"/>
    <updated>2013-08-21T13:52:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-sorting-arrays</id>
    <content type="html"><![CDATA[<p>عناصر آرایه ها می توانند به صورت الفبایی یا عددی (صعودی یا نزولی) مرتب شوند.</p>

<h2>توابع مرتب سازی در PHP</h2>

<p>در این قسمت به معرفی توابع مرتب سازی آرایه در PHP پرداخته می شود:</p>

<ul>
<li><p>()sort: آرایه را به ترتیب صعودی مرتب می کند.</p></li>
<li><p>()rsort:آرایه را به ترتیب نزولی مرتب می کند.</p></li>
<li><p>()asort: آرایه انجمنی را با توجه به مقادیر<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>  آن به صورت صعودی مرتب می کند.</p></li>
<li><p>()ksort:آرایه انجمنی را با توجه به کلید<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>های  آن به صورت صعودی مرتب می کند.</p></li>
<li><p>()arsort:آرایه انجمنی را با توجه به مقادیر  آن به صورت نزولی مرتب می کند.</p></li>
<li><p>()krsort:آرایه انجمنی را با توجه به کلیدهای  آن به صورت نزولی مرتب می کند.</p></li>
</ul>


<h2>مرتب¬سازی آرایه به ترتیب صعودی- ()sort</h2>

<p><strong>مثال</strong> زیر عناصر آرایه $cars را به ترتیب صعودی بر اساس حروف الفبا مرتب می کند:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="s2">&quot;Toyota&quot;</span><span class="p">);</span>
<span class="nb">sort</span><span class="p">(</span><span class="nv">$cars</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">BMW</span>
<span class="x">Toyota</span>
<span class="x">Volvo</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> مرتب سازی آرایه $numbers به ترتیب صعودی &ndash; عددی</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$numbers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">);</span>
<span class="nb">sort</span><span class="p">(</span><span class="nv">$numbers</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">2</span>
<span class="x">4</span>
<span class="x">6</span>
<span class="x">11</span>
<span class="x">22</span>
</code></pre></div>


<h2>مرتب سازی آرایه به ترتیب نزولی- ()rsort:</h2>

<p><strong>مثال:</strong></p>

<p> مرتب سازی عناصر آرایه cars$ به ترتیب نزولی</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="s2">&quot;Toyota&quot;</span><span class="p">);</span>
<span class="nb">rsort</span><span class="p">(</span><span class="nv">$cars</span><span class="p">);</span>

<span class="nv">$clength</span> <span class="o">=</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$cars</span><span class="p">);</span>
<span class="k">for</span><span class="p">(</span><span class="nv">$x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="nv">$x</span> <span class="o">&lt;</span> <span class="nv">$clength</span><span class="p">;</span><span class="nv">$x</span><span class="o">++</span><span class="p">)</span>
   <span class="p">{</span>
   <span class="k">echo</span> <span class="nv">$cars</span><span class="p">[</span><span class="nv">$x</span><span class="p">];</span>
   <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
   <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Volvo</span>
<span class="x">Toyota</span>
<span class="x">BMW</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> مرتب سازی آرایه numbers$ به ترتیب نزولی – عددی</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$numbers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">22</span><span class="p">,</span><span class="mi">11</span><span class="p">);</span>
<span class="nb">rsort</span><span class="p">(</span><span class="nv">$numbers</span><span class="p">);</span>

<span class="nv">$arrlength</span> <span class="o">=</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$numbers</span><span class="p">);</span>
<span class="k">for</span><span class="p">(</span><span class="nv">$x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="nv">$x</span> <span class="o">&lt;</span> <span class="nv">$arrlength</span><span class="p">;</span><span class="nv">$x</span><span class="o">++</span><span class="p">)</span>
   <span class="p">{</span>
   <span class="k">echo</span> <span class="nv">$numbers</span><span class="p">[</span><span class="nv">$x</span><span class="p">];</span>
   <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
   <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">22</span>
<span class="x">11</span>
<span class="x">6</span>
<span class="x">4</span>
<span class="x">2</span>
</code></pre></div>


<h2>مرتب سازی آرایه انجمنی به ترتیب صعودی و نزولی:</h2>

<p><strong>مثال:</strong></p>

<p> مرتب سازی صعودی آرایه انجمنی بر اساس مقادیر  آن-  ()assort:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>
<span class="nb">asort</span><span class="p">(</span><span class="nv">$age</span><span class="p">);</span>

<span class="k">foreach</span><span class="p">(</span><span class="nv">$age</span> <span class="k">as</span> <span class="nv">$x</span><span class="o">=&gt;</span><span class="nv">$x_value</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">&quot;Key = &quot;</span> <span class="o">.</span> <span class="nv">$x</span> <span class="o">.</span> <span class="s2">&quot;, Value = &quot;</span> <span class="o">.</span> <span class="nv">$x_value</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Key = Peter, Value = 35</span>
<span class="x">Key = Ben, Value = 37</span>
<span class="x">Key = Joe, Value = 43</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> مرتب سازی صعودی آرایه انجمنی بر اساس کلیدهای  آن- ()ksort:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>
<span class="nb">ksort</span><span class="p">(</span><span class="nv">$age</span><span class="p">);</span>

<span class="k">foreach</span><span class="p">(</span><span class="nv">$age</span> <span class="k">as</span> <span class="nv">$x</span><span class="o">=&gt;</span><span class="nv">$x_value</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">&quot;Key = &quot;</span> <span class="o">.</span> <span class="nv">$x</span> <span class="o">.</span> <span class="s2">&quot;, Value = &quot;</span> <span class="o">.</span> <span class="nv">$x_value</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Key = Ben, Value = 37</span>
<span class="x">Key = Joe, Value = 43</span>
<span class="x">Key = Peter, Value = 35</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> مرتب سازی نزولی آرایه انجمنی بر اساس مقادیر  آن- ()arsort:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>
<span class="nb">arsort</span><span class="p">(</span><span class="nv">$age</span><span class="p">);</span>

<span class="k">foreach</span><span class="p">(</span><span class="nv">$age</span> <span class="k">as</span> <span class="nv">$x</span><span class="o">=&gt;</span><span class="nv">$x_value</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">&quot;Key = &quot;</span> <span class="o">.</span> <span class="nv">$x</span> <span class="o">.</span> <span class="s2">&quot;, Value = &quot;</span> <span class="o">.</span> <span class="nv">$x_value</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Key = Joe, Value = 43</span>
<span class="x">Key = Ben, Value = 37</span>
<span class="x">Key = Peter, Value = 35</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> مرتب سازی نزولی آرایه انجمنی بر اساس کلیدهای  آن – ()krsort:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>
<span class="nb">krsort</span><span class="p">(</span><span class="nv">$age</span><span class="p">);</span>

<span class="k">foreach</span><span class="p">(</span><span class="nv">$age</span> <span class="k">as</span> <span class="nv">$x</span><span class="o">=&gt;</span><span class="nv">$x_value</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">&quot;Key = &quot;</span> <span class="o">.</span> <span class="nv">$x</span> <span class="o">.</span> <span class="s2">&quot;, Value = &quot;</span> <span class="o">.</span> <span class="nv">$x_value</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Key = Peter, Value = 35</span>
<span class="x">Key = Joe, Value = 43</span>
<span class="x">Key = Ben, Value = 37</span>
</code></pre></div>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>value<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>key<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[حلقه های for در PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/21/php-for-loops/"/>
    <updated>2013-08-21T12:59:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/21/php-for-loops</id>
    <content type="html"><![CDATA[<h2>حلقه for</h2>

<p>حلقه for هنگامی استفاده می شود که شما تعداد دفعات اجرای یک اسکریپت را بدانید.</p>

<p><strong>گرامر:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">for</span> <span class="p">(</span><span class="nx">init</span><span class="p">;</span> <span class="nx">condition</span><span class="p">;</span> <span class="nx">increment</span><span class="p">)</span>
  <span class="p">{</span>
     <span class="err">؛کدی</span> <span class="err">که</span> <span class="err">باید</span> <span class="err">اجرا</span> <span class="err">شود</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>پارامترها:</strong></p>

<p><strong>init:</strong> معمولاً برای تنظیم شمارنده به کار می رود(البته می تواند هر قطعه کدی باشد که قرار است در ابتدای یک حلقه اجرا شود).</p>

<p><strong>Condition:</strong> در هر تکرار مورد بررسی قرار می گیرد، در صورتیکه شرط برقرار باشد حلقه ادامه می یابد، در غیر اینصورت حلقه خاتمه می یابد.</p>

<p><strong>Increment:</strong> معمولاً برای افزایش شمارنده به کار می رود(البته می تواند هر قطعه کدی باشد که قرار است در انتهای یک حلقه اجرا شود)</p>

<p><strong>نکته:</strong></p>

<p> پارامترهای init و increment در بالا می توانند خالی باشند و یا شامل چند عبارت باشند.</p>

<p><strong>مثال: </strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;The number is &quot;</span> <span class="o">.</span> <span class="nv">$i</span> <span class="o">.</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">The number is 1</span>
<span class="x">The number is 2</span>
<span class="x">The number is 3</span>
<span class="x">The number is 4</span>
<span class="x">The number is 5</span>
</code></pre></div>


<h2>حلقه foreach</h2>

<p>حلقه foreach  برای حرکت روی عناصر آرایه به کار می رود.</p>

<p><strong>گرامر:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$array</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span>
  <span class="p">{</span>
     <span class="err">؛کدی</span> <span class="err">که</span> <span class="err">باید</span> <span class="err">اجرا</span> <span class="err">شود</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p>در هر بار تکرار حلقه مقدار جاری عنصر آرایه برابر با value$ می شود (و اشاره گر آرایه یکی یکی جلو می رود).</p>

<p>بنابراین در تکرار بعدی حلقه مقدار بعدی آرایه مورد بررسی قرار می گیرد.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$x</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s2">&quot;one&quot;</span><span class="p">,</span><span class="s2">&quot;two&quot;</span><span class="p">,</span><span class="s2">&quot;three&quot;</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$x</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$value</span> <span class="o">.</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">one</span>
<span class="x">two</span>
<span class="x">three</span>
</code></pre></div>


<h2>استفاده از حلقه در آرایه ها</h2>

<h3>استفاده از حلقه در آرایه اندیس دار</h3>

<p>برای اینکه بتوان تمامی عناصر یک آرایه اندیس دار را چاپ نمود، می توان از حلقه for استفاده نمود، مانند زیر:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="s2">&quot;Toyota&quot;</span><span class="p">);</span>
<span class="nv">$arrlength</span> <span class="o">=</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$cars</span><span class="p">);</span>

<span class="k">for</span><span class="p">(</span><span class="nv">$x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="nv">$x</span> <span class="o">&lt;</span> <span class="nv">$arrlength</span><span class="p">;</span><span class="nv">$x</span><span class="o">++</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$cars</span><span class="p">[</span><span class="nv">$x</span><span class="p">];</span>
  <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Volvo</span>
<span class="x">BMW</span>
<span class="x">Toyota</span>
</code></pre></div>


<h3>استفاده از حلقه در آرایه انجمنی</h3>

<p>برای اینکه بتوان تمامی عناصر یک آرایه اندیس دار را چاپ نمود، می توان از حلقه foreach استفاده نمود، مانند زیر:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>

<span class="k">foreach</span><span class="p">(</span><span class="nv">$age</span> <span class="k">as</span> <span class="nv">$x</span><span class="o">=&gt;</span><span class="nv">$x_value</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Key = &quot;</span> <span class="o">.</span> <span class="nv">$x</span> <span class="o">.</span> <span class="s2">&quot;, Value = &quot;</span> <span class="o">.</span> <span class="nv">$x_value</span><span class="p">;</span>
  <span class="k">echo</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>خروجی:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Key = Peter, Value = 35</span>
<span class="x">Key = Ben, Value = 37</span>
<span class="x">Key = Joe, Value = 43</span>
</code></pre></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[حلقه while در PHP ]]></title>
    <link href="http://tutors.github.io/blog/2013/08/20/php-while-loops/"/>
    <updated>2013-08-20T18:06:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/20/php-while-loops</id>
    <content type="html"><![CDATA[<h2>حلقه ها در PHP</h2>

<p>به طور کلی هنگامی که شما کدنویسی می کنید، ممکن است بخواهید برخی از بلاک های کد چندین بار انجام شوند. برای انجام این کار به جای اینکه خط های تکراری راچندین بار بنویسید می توانید از حلقه استفاد کنید.</p>

<p>در حقیقت حلقه، یک بلاک از کد را به تعداد دفعات خاصی یا تا زمانی که شرایط خاصی برقرار است، اجرا می کند. در PHP از کلمات کلیدی زیر برای ایجاد حلقه استفاده می شود:</p>

<ul>
<li><p><strong>while:</strong> یک بلاک از کد را تا زمانیکه شرایط خاصی برقرار باشد، اجرا می کند.</p></li>
<li><p><strong>do&hellip;while:</strong> ابتدا یکبار کد را اجرا می کند و سپس شرط حلقه را چک می کند و درصورتیکه صحیح باشد، کد را یکبار دیگر اجرا می کند و به همین ترتیب ادامه می یابد</p></li>
<li><p><strong>for:</strong> یک بلاک از کد را به تعداد دفعات خاصی اجرا می کند</p></li>
<li><p><strong>foreach:</strong> بلاکی از کد را به ازای هر عنصر آرایه اجرا می کند</p></li>
</ul>


<h2>حلقه while</h2>

<p>حلقه while یک بلاک از کد را تا زمانی که شرایط خاصی برقرار باشد، اجرا می کند.</p>

<p><strong>گرامر<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></strong></p>

<div class="highlight"><pre><code class="php"><span class="x">while (condition)</span>
<span class="x">  {</span>
<span class="x">  بلاک کد;</span>
<span class="x">  }</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> در این مثال ابتدا به متغیر i (شمارنده حلقه) مقدار 1 نسبت داده می شود (i=1).سپس حلقه while  تا زمانیکه i  کوچتر یا مساوی 5 شود ادامه می یابد.</p>

<p>هر بار که حلقه اجرا می شود، i یک واحد افزایش می یابد.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">while</span><span class="p">(</span><span class="nv">$i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;The number is &quot;</span> <span class="o">.</span> <span class="nv">$i</span> <span class="o">.</span> <span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
  <span class="nv">$i</span><span class="o">++</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">The number is 1
The number is 2
The number is 3
The number is 4
The number is 5
</code></pre></div>


<h2>دستور do…while</h2>

<p>حلقه do-while کد را همیشه یکبار اجرا می کند، سپس شرط حلقه را چک می کند و حلقه را تا زمانیکه شرط خاصی برقرار باشد تکرار می کند.</p>

<p><strong>گرامر</strong></p>

<div class="highlight"><pre><code class="sh"><span class="k">do</span>
  <span class="o">{</span>
;کدی که باید اجرا شود
  <span class="o">}</span>
<span class="k">while</span> <span class="o">(</span>condition<span class="o">)</span>;
</code></pre></div>


<p><strong>مثال:</strong></p>

<p> در این مثال ابتدا به متغیر i (شمارنده حلقه) مقدار 1 نسبت داده می¬شود ($i=1;).سپس حلقه while do… شروع می شود.</p>

<p> در حلقه ابتدا مقدار i یک واحد اضافه می شود، خروجی نوشته می شود، سپس شرط حلقه چک می شود (آیا i کوچکتیر یا مساوی 5 است) و حلقه ادامه می یابد.</p>

<div class="highlight"><pre><code class="sh">&lt;?php
<span class="nv">$i</span> <span class="o">=</span> 1;
<span class="k">do</span>
  <span class="o">{</span>
  <span class="nv">$i</span>++;
  <span class="nb">echo</span> <span class="s2">&quot;The number is &quot;</span> . <span class="nv">$i</span> . <span class="s2">&quot;&lt;br&gt;&quot;</span>;
  <span class="o">}</span>
<span class="k">while</span> <span class="o">(</span><span class="nv">$i</span> &lt;<span class="o">=</span> 5<span class="o">)</span>;
?&gt;
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">The number is 2
The number is 3
The number is 4
The number is 5
The number is 6
</code></pre></div>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>syntax<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[آرایه های چند بعدی در PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/20/php-multidimensional-arrays/"/>
    <updated>2013-08-20T17:54:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/20/php-multidimensional-arrays</id>
    <content type="html"><![CDATA[<p>مقدار یک آرایه می تواند علاوه بر مقدار یک آرایه دیگر باشد و بنابراین می تواند آرایه دیگر را در خود نگهدارد. در این حالت می توان آرایه های دو یا سه بعدی ایجاد نمود.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="c1">// A two-dimensional array</span>
<span class="nv">$cars</span> <span class="o">=</span> <span class="k">array</span>
   <span class="p">(</span>
   <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="mi">96</span><span class="p">),</span>
   <span class="k">array</span><span class="p">(</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="mi">60</span><span class="p">,</span><span class="mi">59</span><span class="p">),</span>
   <span class="k">array</span><span class="p">(</span><span class="s2">&quot;Toyota&quot;</span><span class="p">,</span><span class="mi">110</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span>
   <span class="p">);</span>
   
<span class="k">echo</span> <span class="nv">$cars</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;: Ordered: &quot;</span><span class="o">.</span><span class="nv">$cars</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;. Sold: &quot;</span><span class="o">.</span><span class="nv">$cars</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$cars</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;: Ordered: &quot;</span><span class="o">.</span><span class="nv">$cars</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;. Sold: &quot;</span><span class="o">.</span><span class="nv">$cars</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$cars</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;: Ordered: &quot;</span><span class="o">.</span><span class="nv">$cars</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;. Sold: &quot;</span><span class="o">.</span><span class="nv">$cars</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="s2">&quot;&lt;br&gt;&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Volvo: Ordered: 100. Sold: 96</span>
<span class="x">BMW: Ordered: 60. Sold: 59</span>
<span class="x">Toyota: Ordered: 110. Sold: 100</span>
</code></pre></div>


<h2>آرایه های چند بعدی</h2>

<p>یک آرایه چندبعدی آرایه ای است که شا مل یک یا چند آرایه دیگر است.</p>

<p>در یک آرایه چندبعدی هر عنصر در آرایه اصلی می تواند یک آرایه باشد و هر عنصر در زیر آرایه نیز می تواند یک آرایه باشد و به همین ترتیب.</p>

<p><strong>مثال 1:</strong></p>

<p>در مثال يک آرايه چند بعدي با کليدهاي اختصاص داده شده اتوماتيک ايجاد مي شود.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$families</span> <span class="o">=</span> <span class="k">array</span>
  <span class="p">(</span>
  <span class="s2">&quot;Griffin&quot;</span><span class="o">=&gt;</span><span class="k">array</span>
  <span class="p">(</span>
  <span class="s2">&quot;Peter&quot;</span><span class="p">,</span>
  <span class="s2">&quot;Lois&quot;</span><span class="p">,</span>
  <span class="s2">&quot;Megan&quot;</span>
  <span class="p">),</span>
  <span class="s2">&quot;Quagmire&quot;</span><span class="o">=&gt;</span><span class="k">array</span>
  <span class="p">(</span>
  <span class="s2">&quot;Glenn&quot;</span>
  <span class="p">),</span>
  <span class="s2">&quot;Brown&quot;</span><span class="o">=&gt;</span><span class="k">array</span>
  <span class="p">(</span>
  <span class="s2">&quot;Cleveland&quot;</span><span class="p">,</span>
  <span class="s2">&quot;Loretta&quot;</span><span class="p">,</span>
  <span class="s2">&quot;Junior&quot;</span>
  <span class="p">)</span>
  <span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p>آرايه بالا در صورتي که در خروجي نوشته شود به صورت زير مي باشد:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">Array</span>
<span class="p">(</span>
<span class="p">[</span><span class="nx">Griffin</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
  <span class="p">(</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Peter</span>
  <span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Lois</span>
  <span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Megan</span>
  <span class="p">)</span>
<span class="p">[</span><span class="nx">Quagmire</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
  <span class="p">(</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Glenn</span>
  <span class="p">)</span>
<span class="p">[</span><span class="nx">Brown</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
  <span class="p">(</span>
  <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Cleveland</span>
  <span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Loretta</span>
  <span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">Junior</span>
  <span class="p">)</span>
<span class="p">)</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>مثال 2:</strong></p>

<p>مي خواهيم يک مقدار يکتا از آرايه بالا را نشان دهيم:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>

<span class="k">echo</span> <span class="s2">&quot;Is &quot;</span> <span class="o">.</span> <span class="nv">$families</span><span class="p">[</span><span class="s1">&#39;Griffin&#39;</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot; a part of the Griffin family?&quot;</span><span class="p">;</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتيجه اجرا</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Is Megan a part of the Griffin family?</span>
</code></pre></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[آرایه ها در PHP ]]></title>
    <link href="http://tutors.github.io/blog/2013/08/20/php-arrays/"/>
    <updated>2013-08-20T16:20:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/20/php-arrays</id>
    <content type="html"><![CDATA[<h2>آرایه ها در PHP</h2>

<p><strong>آرایه چیست؟</strong> آرایه یک متغیر ویژه است که در یک لحظه می تواند چندین مقدار را در خود نگهداری کند.</p>

<p>در صورتیکه شما چندین مقدار یا لیستی از عناصر  (لیستی از نام ماشین ها برای مثال) داشته باشید، ذخیره کردن cars در یک متغیر مشابه زیر است:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars1</span><span class="o">=</span><span class="s2">&quot;Volvo&quot;</span><span class="p">;</span>
<span class="nv">$cars2</span><span class="o">=</span><span class="s2">&quot;BMW&quot;</span><span class="p">;</span>
<span class="nv">$cars3</span><span class="o">=</span><span class="s2">&quot;Toyota&quot;</span><span class="p">;</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p>اما اگر شما بخواهید در لیست این عناصر دنبال عنصر خاصی بگردید چه اتفاقی می افتد؟ و اگر به جای سه ماشین 300 ماشین داشته باشید چه اتفاقی می افتد؟ راه حل این است که یک آرایه ایجاد کنید.</p>

<p>یک آرایه می تواند چندین مقدار را تحت یک نام در خود نگه دارد و شما می توانید توسط اندیس عناصر به آنها دسترسی پیدا کنید.</p>

<h2>ایجاد آرایه در PHP</h2>

<p>در PHP از تابع ()array برای ایجاد آرایه استفاده می شود. در این زبان سه نوع آرایه وجود دارد:</p>

<p><strong>آرایه های اندیس دار<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></strong> : آرایه ای با اندیس های عددی</p>

<p><strong>آرایه های انجمنی <sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></strong>: آرایه هایی با کلیدهای نامدار</p>

<p><strong>آرایه های چند بعدی<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></strong> : آرایه های شامل یک یا چند آرایه</p>

<h2>آرایه های اندیس در PHP</h2>

<p>دو راه برای ایجاد آرایه اندیس وجود دارد:</p>

<ul>
<li>اندیس به طور اتوماتیک مقداردهی می شود (دقت شود که اندیس همواره از صفر شروع می شود):</li>
</ul>


<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="s2">&quot;Toyota&quot;</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<ul>
<li>اندیس به صورت دستی مقداردهی می شود:</li>
</ul>


<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;Volvo&quot;</span><span class="p">;</span>
<span class="nv">$cars</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;BMW&quot;</span><span class="p">;</span>
<span class="nv">$cars</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;Toyota&quot;</span><span class="p">;</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>مثال</strong> زیر یک آرایه اندیس دار به نام cars$، ایجاد کرده، عناصر آن را مقداردهی کرده و مقادیر آرایه را چاپ می کند.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="s2">&quot;Toyota&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&quot;I like &quot;</span> <span class="o">.</span> <span class="nv">$cars</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot;, &quot;</span> <span class="o">.</span> <span class="nv">$cars</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot; and &quot;</span> <span class="o">.</span> <span class="nv">$cars</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot;.&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">I like Volvo, BMW and Toyota.</span>
</code></pre></div>


<h2>بدست آوردن طول آرایه- تابع ()count</h2>

<p>تابع ()count برای به دست آوردن طول آرایه (تعداد عناصر آرایه) به کار می رود:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$cars</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s2">&quot;Volvo&quot;</span><span class="p">,</span><span class="s2">&quot;BMW&quot;</span><span class="p">,</span><span class="s2">&quot;Toyota&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$cars</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">3</span>
</code></pre></div>


<h2>آرایه های انجمنی در PHP</h2>

<p>آرایه انجمنی آرایه ای است از کلیدهای نامدار که می توان به آنها مقدار نسبت داد، استفاده می کند. برای ایجاد این نوع آرایه دو روش وجود دارد:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p>یا</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span><span class="p">[</span><span class="s1">&#39;Peter&#39;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;35&quot;</span><span class="p">;</span>
<span class="nv">$age</span><span class="p">[</span><span class="s1">&#39;Ben&#39;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;37&quot;</span><span class="p">;</span>
<span class="nv">$age</span><span class="p">[</span><span class="s1">&#39;Joe&#39;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;43&quot;</span><span class="p">;</span>

<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>مثال</strong>: می توان از کلیدهای نامدار در یک اسکریپت استفاده نمود:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$age</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s2">&quot;Peter&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;35&quot;</span><span class="p">,</span><span class="s2">&quot;Ben&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;37&quot;</span><span class="p">,</span><span class="s2">&quot;Joe&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;43&quot;</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">&quot;Peter is &quot;</span> <span class="o">.</span> <span class="nv">$age</span><span class="p">[</span><span class="s1">&#39;Peter&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot; years old.&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Peter is 35 years old.</span>
</code></pre></div>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Indexed arrays<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Associative arrays<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>Multidimensional arrays<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[عبارات If … Else ]]></title>
    <link href="http://tutors.github.io/blog/2013/08/20/php-if/"/>
    <updated>2013-08-20T15:37:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/20/php-if</id>
    <content type="html"><![CDATA[<h2>عبارات If … Else در PHP</h2>

<p>دلیل استفاده از عبارات شرطی این است که بتوان بر حسب موقعیت های (شرایط) مختلف، اعمال متفاوتی انجام داد.</p>

<h2>دستورات شرطی</h2>

<p>در بسیاری از مواقع زمانی که شما برنامه نویسی می کنید می خواهید اعمال متفاوتی را برای شرایط مختلف اعمال کنید. در این شرایط می توان از دستورات شرطی استفاده نمود.</p>

<p>در زبان PHP دستورات شرطی زیر وجود دارند:</p>

<p><strong>دستورات If:</strong> دستورات را اجرا می کند، در صورتی که شرط خاصی اتفاق بیفتد.</p>

<p><strong>دستورات if … else:</strong> در صورتی که شرط مورد مقایسه صحیح باشد، دستورات مربوط را اجرا می کند و در غیر این صورت دستورات دیگری را اجرا می کند.</p>

<p><strong>دستورات if …else if …else:</strong> یکی از چندین بلوک کد را که دارای شرایط اجرا شدن هستند را اجرا می کند.</p>

<p><strong>دستورات switch:</strong> یکی از چندین بلوک کد را که دارای شرایط اجرا شدن هستند را اجرا می کند.</p>

<h2>دستورات  if:</h2>

<p>عبارت if، دستور را اجرا می کند، در صورتی که شرط خاصی اتفاق بیفتد. گرامر عبارت if در زیر آمده است.</p>

<div class="highlight"><pre><code class="php"><span class="x">if (condition)</span>
<span class="x">  {</span>
<span class="x">  کدی که باید اجرا شود در صورتیکه شرط خاصی اتفاق بیفتد;</span>
<span class="x">  }</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<p>کدی که در زیر آمده است نشان می دهد که در صورتیکه ساعت (در این لحظه) کمتر از 20 باشد، عبارت &ldquo;Have a good day!&rdquo;  چاپ می شود.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$t</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">&quot;H&quot;</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$t</span> <span class="o">&lt;</span> <span class="s2">&quot;20&quot;</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Have a good day!&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Have a good day!</span>
</code></pre></div>


<h2>دستورات if&hellip;else:</h2>

<p>زمانی از دستورات if&hellip;.else استفاده می شود که بخواهید در صورتیکه شرایط خاصی برقرار باشد کد خاصی را اجرا کنید، در غیر این صورت کد دیگری را اجرا کنید.</p>

<p><strong>گرامر<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">if (condition)</span>
<span class="x"> {</span>
<span class="x">  ;دستوری که باید اجرا شود در صورتیکه شرط صحیح باشد</span>
<span class="x"> }</span>
<span class="x">else</span>
<span class="x"> {</span>
<span class="x">  ;دستوری که باید اجرا شود در صورتیکه شرط غلط باشد</span>
<span class="x"> }</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$t</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">&quot;H&quot;</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$t</span> <span class="o">&lt;</span> <span class="s2">&quot;20&quot;</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Have a good day!&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="k">else</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Have a good night!&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">زمان کنونی را محاسبه می کند .</span>

<span class="x"> در صورتیکه ساعت کنونی کمتر از 20 باشد عبارت Have a good day! را چاپ می کند </span>

<span class="x">. در غیر این صورت Have a good night! را چاپ می کند.</span>
</code></pre></div>


<h2>دستورات if&hellip;else if&hellip;.else</h2>

<p>از این دستورات هنگامی اسنفاده می شود که بخواهید یکی از چندین بلاک کدی را که موجود است بر حسب شرایط مختلف اجرا کنید.</p>

<p><strong>گرامر:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">if (condition)</span>
<span class="x">  {</span>
<span class="x">  ;دستوری که باید اجرا شود در صورتیکه شرط صحیح باشد</span>
<span class="x">  }</span>
<span class="x">else if (condition)</span>
<span class="x">  {</span>
<span class="x"> ; دستوری که باید اجرا شود در صورتیکه شرط صحیح باشد</span>
<span class="x"> }</span>
<span class="x">else</span>
<span class="x">  {</span>
<span class="x"> ;دستوری که باید اجرا شود در صورتیکه شرط غلط باشد</span>
<span class="x"> }</span>
</code></pre></div>


<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$t</span><span class="o">=</span><span class="nb">date</span><span class="p">(</span><span class="s2">&quot;H&quot;</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$t</span><span class="o">&lt;</span><span class="s2">&quot;10&quot;</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Have a good morning!&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$t</span><span class="o">&lt;</span><span class="s2">&quot;20&quot;</span><span class="p">)</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Have a good day!&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="k">else</span>
  <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">&quot;Have a good night!&quot;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">زمان کنونی را محاسبه می کند .</span>

<span class="x"> در صورتیکه ساعت کنونی کمتر از 10 باشد </span>

<span class="x">عبارت Have a good morning! را چاپ می کند.</span>

<span class="x"> در غیر این صورت در صورتیکه ساعت کنونی کمتر از 20 باشد</span>

<span class="x"> Have a good day! را چاپ می کند، </span>

<span class="x">در غیر این صورت </span>

<span class="x">Have a good night! را چاپ می کند.</span>
</code></pre></div>


<h2>دستورات Switch در PHP</h2>

<p>دستورات Switch بدین منظور استفاده می شوند که بتوان بر اساس موقعیت های متفاوت اعمال متفاوتی انجام داد.</p>

<p><strong>گرامر:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">switch (n)</span>
<span class="x">{</span>
<span class="x">case label1:</span>
<span class="x">  code to be executed if n = label1;</span>
<span class="x">  break;</span>
<span class="x">case label2:</span>
<span class="x">  code to be executed if n = label2;</span>
<span class="x">  break;</span>
<span class="x">default:</span>
<span class="x">  code to be executed if n is different from both label1 and label2;</span>
<span class="x">}</span>
</code></pre></div>


<p><strong>نحوه اجرای کد بالا:</strong>
در ابتدا متغیر n ارزیابی می شود و سپس مقدار آن با مقدار هریک از case ها مقایسه می شود.</p>

<p>در صورتیکه تطابقی یافت شود، بلاک کد مربوط به آن case اجرا می شود.
در صورتیکه مقدار هیچ یک از case ها با مقدار n  برابر نباشد، کد مربوط به قسمت default اجرا می شود.</p>

<p>توجه کنید که در پایان هر case باید دستور break قرار داده شود به منظور اینکه از اجرای کدهای سایر case ها جلوگیری شود.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$favcolor</span> <span class="o">=</span> <span class="s2">&quot;red&quot;</span><span class="p">;</span>
<span class="k">switch</span> <span class="p">(</span><span class="nv">$favcolor</span><span class="p">)</span>
<span class="p">{</span>
<span class="k">case</span> <span class="s2">&quot;red&quot;</span><span class="o">:</span>
  <span class="k">echo</span> <span class="s2">&quot;Your favorite color is red!&quot;</span><span class="p">;</span>
  <span class="k">break</span><span class="p">;</span>
<span class="k">case</span> <span class="s2">&quot;blue&quot;</span><span class="o">:</span>
  <span class="k">echo</span> <span class="s2">&quot;Your favorite color is blue!&quot;</span><span class="p">;</span>
  <span class="k">break</span><span class="p">;</span>
<span class="k">case</span> <span class="s2">&quot;green&quot;</span><span class="o">:</span>
  <span class="k">echo</span> <span class="s2">&quot;Your favorite color is green!&quot;</span><span class="p">;</span>
  <span class="k">break</span><span class="p">;</span>
<span class="k">default</span><span class="o">:</span>
  <span class="k">echo</span> <span class="s2">&quot;Your favorite color is neither red, blue, or green!&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>

<span class="x">?&gt;</span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Your favorite color is red!</span>
</code></pre></div>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Syntax<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[عملگرهای PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/20/php-oprators/"/>
    <updated>2013-08-20T12:34:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/20/php-oprators</id>
    <content type="html"><![CDATA[<h2>عملگرهای PHP</h2>

<p>در PHP عملگر مساوی = برای انتساب مقادیر به متغیرها به کار می رود. عملگر محاسباتی + نیز برای جمع مقادیر مورد استفاده قرارمی گیرد.</p>

<h2>انواع عملگرهای محاسباتی PHP</h2>

<p>انواع عملگرهای PHP عبارتند از:</p>

<div class="highlight"><pre><code class="php"><span class="x">شرح    :    عملگر</span>
<span class="x"> </span>
<span class="x">x + y    : جمع x و y</span>

<span class="x">x - y    : تفریق x و y</span>

<span class="x">x * y    : ضرب x و y</span>

<span class="x">x / y    : تقسیم x بر y</span>

<span class="x">x % y    : باقیمانده تقسیم x بر y</span>

<span class="x">-x       : قرینه x </span>

<span class="x">a . b    : الحاق دو رشته</span>
</code></pre></div>


<h2>عملگرهای انتساب PHP</h2>

<p>عملگر اصلی انتساب در PHP، “=” می باشد. به این معنی که عملوند سمت چپ برابر مقدار عملوند سمت راست را می گیرد.</p>

<div class="highlight"><pre><code class="php"><span class="x">عبارت معادل :   انتساب</span>

<span class="x">x = y    : x = y</span>

<span class="x">x += y   : x = x + y</span>

<span class="x">x -= y   : x = x - y</span>

<span class="x">x *= y   : x = x * y</span>

<span class="x">x /= y   : x = x / y</span>

<span class="x">x %= y   : x = x % y</span>

<span class="x">a .= b   : a = a . b</span>
</code></pre></div>


<h2>عملگرهای افزایش/کاهش</h2>

<div class="highlight"><pre><code class="php"><span class="x">شرح    :   عملگر</span>

<span class="x">++ x    : ابتدا مقدار x را یک واحد افزایش می دهد و سپس مقدار آن را بر می گرداند. </span>


<span class="x">x ++    : ابتدا مقدار x را بر می گرداند و سپس به مقدار آن یک واحد اضافه می کند.</span>

<span class="x">-- x    : ابتدا مقدار x را یک واحد کاهش می دهد و سپس مقدار آن را بر می گرداند.</span>

<span class="x">x --    : ابتدا مقدار x را بر می گرداند و سپس از مقدار آن یک واحد کم می کند.</span>
</code></pre></div>


<h2>عملگرهای مقایسه ای</h2>

<p>عملگرهای مقایسه ای به  شما اجازه می دهند که دو مقدار را با یکدیگر مقایسه کنید:</p>

<div class="highlight"><pre><code class="php"><span class="x">شرح    :      عملگر</span>

<span class="x">x == y     : نتیجه در صورتی true  می باشد که  x با y مساوی باشد </span>

<span class="x">x === y    : نتیجه  در صورتی true می باشد که x با y مساوی باشد و x و y هر دو از یک نوع باشند.</span>

<span class="x">x != y     : نتیجه در صورتی true است که x با y مساوی نباشد.</span>


<span class="x">x &lt;&gt; y     : نتیجه در صورتی  true است که x با y مساوی نباشد.</span>

<span class="x">x !== y    : نتیجه در صورتی true می باشد که x با y مساوی نباشد یا x و y هر دو از یک نوع نباشند.</span>

<span class="x">x &gt; y      : نتیجه در صورتی true می باشد که x بزرگتر ازy باشد.</span>


<span class="x">x &lt; y      : نتیجه در صورتی true می باشد که x کوچکتر ازy باشد.</span>

<span class="x">x &gt;= y     : نتیجه در صورتی true می باشد که x بزرگتر یا مساویy باشد.</span>

<span class="x">x &lt;= y     : نتیجه در صورتی true می باشد که x کوچکتر یا مساویy باشد.</span>
</code></pre></div>


<p><strong>مثال</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">نتیجه    :     عبارت</span>

<span class="x">5==8       : false</span>

<span class="x">5===&quot;5&quot;    : false </span>

<span class="x">5!=8       : true</span>

<span class="x">5&lt;&gt;8       : true</span>


<span class="x">5!==&quot;5&quot;    : true</span>

<span class="x">5&gt;8        : false</span>

<span class="x">5&lt;8        : true</span>

<span class="x">5&gt;=8       : false</span>

<span class="x">5&lt;=8       : true</span>
</code></pre></div>


<h2>عملگرهای منطقی</h2>

<div class="highlight"><pre><code class="php"><span class="x">شرح    :      عملگر</span>

<span class="x">x and y    : در صورتی true است که هم xو هم true  ،y باشد</span>

<span class="x">x or y     : در صورتی true است که  x یا y (یک از این دو  یا هر دو)true باشد.</span>


<span class="x">x xor y    : در صورتی true است که یا x یا y (و نه هر دو)true باشد.</span>

<span class="x">x &amp;&amp; y     : در صورتی true است که هم xو هم  true ،y باشد</span>

<span class="x">x || y     : در صورتی true است که  x یا y (یک از این دو  یا هر دو)true باشد.</span>

<span class="x">! x        : در صورتی true است که  true ،x نباشد.</span>
</code></pre></div>


<p><strong>مثال</strong></p>

<p> اگر x = 6 و y = 3 باشد حاصل هریک از عبارت های زیر را بدست آورید.</p>

<div class="highlight"><pre><code class="php"><span class="x">نتیجه    :                       عبارت</span>

<span class="x">(x &lt; 10 and y &gt; 1)          :  true</span>

<span class="x">x==6 or y==5                :  true</span>

<span class="x">x==6 xor y==3               :  false</span>

<span class="x">(x==5 || y==5)              :  false</span>

<span class="x">!(x==y)                     :   true</span>
</code></pre></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[متغیرهای PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/12/php-variables/"/>
    <updated>2013-08-12T15:12:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/12/php-variables</id>
    <content type="html"><![CDATA[<h3>تعریف متغیرها درPHP</h3>

<p>یک متغیر در واقع مکانی برای ذخیره اطلاعات می باشد. متغیرها در PHP مانند متغیرهای ریاضی می تواند باری نگهداری مقادیر استفاده شود.</p>

<p> نام یک متغیر می تواند یک نام کوتاه (مانند x یا y)، یا یک نام توصیفی (مانند age، carname، totalvolume) باشد.</p>

<p> در زبان PHP قوانینی برای نامگذاری متغیرها وجود دارد که عبارتند از :</p>

<ul>
<li>نام یک متغیر با علامت $  و سپس نام متغیر شروع می شود.</li>
<li>نام یک متغیر با یک حرف یا علامت _ شروع می شود.</li>
<li>نام یک متغیر تنها می تواند شامل کاراکترهای حرفی-عددی و علامات (A-z, 0-9, and _ ) باشد.</li>
<li>در نامگذاری یک متغیر نباید از علامت فاصله  استفاده نمود.</li>
<li>نام متغیر به کوچکی و بزرگی حروف حساس است بنابراین $y و $Y دو متغیر جداگانه می باشند.</li>
</ul>


<p><strong>نکته:</strong></p>

<p>به طور کلی زبان PHP به کوچکی و بزرگی حروف حساس است، بنابراین تمامی عبارات، دستورات و نام متغیرهای PHP نسبت به کوچکی و بزرگی حروف حساس هستند.</p>

<h3>ایجاد(تعریف) متغیرهای PHP</h3>

<p>در PHP برای تعریف متغیرها نیاز به نوشتن هیچ دستوری نیست، متغیرها به محض ایجاد و مقداردهی ایجاد می شوند.</p>

<p><strong>مثال:</strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$txt</span> <span class="o">=</span> <span class="s2">&quot;Hello world!&quot;</span><span class="p">;</span>
<span class="nv">$x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p>پس از اجرای عبارت بالا متغیر txt دارای مقدار Hello world! و متغیر x دارای مقدار 5 می شود.</p>

<p><strong>نکته: </strong>
هنگامی که به یک متغیر مقدار رشته ای اختصاص می دهید در اطراف مقدار آن علامت &ldquo; &rdquo; قرار دهید.</p>

<h3>زبان نوع ضعیف  PHP</h3>

<p>همانطور که در مثال قسمت قبل ملاحظه شد، هنگامی که یک متغیر را در PHP تعریف می کنید لازم نیست مشخص کنید که این متغیر از چه نوعی می باشد.
زبان PHP (به طور خودکار) با توجه به مقدار متغیرها به آنها نوع داده ای مناسب را منتسب می کند.</p>

<p><strong>نکته:</strong>
در زبان های برنامه نویسی نوع قوی ، برنامه نویس مجبوراست که قبل از استفاده از متغیرها نوع و نام آنها را مشخص کند.</p>

<h3>متغیرهای رشته ای در PHP</h3>

<p>متغیرهای رشته ای برای نگهداری و ذخیره متون به کار می روند.</p>

<p>در واقع این متغیرها برای نگهداری متغیرهایی که شامل کاراکترها هستند استفاده می شوند و پس از ایجاد یک متغیر رشته ای می توان روی آن اعمال محاسباتی مربوط به رشته ها را انجام داد.</p>

<p>یک رشته می تواند به طور مستقیم در یک تابع استفاده شود و همچنین می تواند در یک متغیر ذخیره شود.</p>

<p>در <strong>مثال</strong> زیر یک متغیر رشته ای به نام txt ایجاد شده است و سپس به آن مقدار &ldquo;Hello world!&rdquo; نسبت داده شده است.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$txt</span><span class="o">=</span><span class="s2">&quot;Hello world!&quot;</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$txt</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">&quot;Hello world!&quot;</span>
</code></pre></div>


<p>در این قسمت به معرفی برخی توابع عمومی و عملگرهای عمل کننده بر روی رشته ها در PHP پرداخته می شود.</p>

<h3>عملگر الحاق</h3>

<p>عملگر<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> الحاق در PHP نقطه ‘.’ می باشد. این عملگر   برای الحاق دو رشته به یکدیگر استفاده می شود.
مثال زیر نحوه الحاق دو متغیر رشته ای به یکدیگر را نشان می دهد:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="nv">$txt1</span><span class="o">=</span><span class="s2">&quot;Hello world!&quot;</span><span class="p">;</span>
<span class="nv">$txt2</span><span class="o">=</span><span class="s2">&quot;What a nice day!&quot;</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$txt1</span> <span class="o">.</span> <span class="s2">&quot; &quot;</span> <span class="o">.</span> <span class="nv">$txt2</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">Hello world! What a nice day!</span>
</code></pre></div>


<p>در مثال بالا دو بار از عملگر الحاق استفاده شده است. معنای “ “ این است که یک فاصله میان دو رشته txt1 و txt2 قرار داده شود.</p>

<h3>تابع ()strlen</h3>

<p>تابع ()strlen طول یک رشته (تعداد کاراکترها) را برمی گرداند.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="nb">strlen</span><span class="p">(</span><span class="s2">&quot;Hello world!&quot;</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">12</span>
</code></pre></div>


<p>این تابع می تواند در حلقه ها استفاده شود، بخصوص زمانیکه بخواهیم حلقه تا زمانی ادامه یابد که هنوز رشته به خاتمه نرسیده است.</p>

<h3>تابع ()strops</h3>

<p>تابع ()strops برای جستجوی کاراکتر خاص در یک رشته استفاده می شود.</p>

<p>در صورتیکه این کاراکتر یافت شود، این تابع مکان آن کاراکتر در اولین تطابق  را برمی گرداند. در صورتیکه هیچ تطابقی یافت نشود، مقدار false برگردانده می شود.</p>

<p><strong>مثال</strong> بعدی کلمه word را در رشته Hello world!  جستجو می کند.</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="nb">strpos</span><span class="p">(</span><span class="s2">&quot;Hello world!&quot;</span><span class="p">,</span> <span class="s2">&quot;world&quot;</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="php"><span class="x">6</span>
</code></pre></div>


<p>همانطور که در نتیجه اجرا مشاهده می کنید موقعیت برگردانده شده 6 (و نه 7) می باشد. علت این است که موقعیت کاراکتر اول در رشته 0 است و نه 1 .</p>

<p>سایر توابع مربوط به رشته ها و کاربرد هرکدام از آنها در پیوست آمده است.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Operator<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[گرامر زبان PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/12/php-syntax/"/>
    <updated>2013-08-12T13:59:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/12/php-syntax</id>
    <content type="html"><![CDATA[<h2>گرامر زبان PHP</h2>

<p>زبان PHP بر روی سرور اجرا می شود و نتیجه آن که به صورت HTML است
به مرورگر برگردانده می شود. در حقیقت هنگامی که کدهای PHP اجرا می شوند در صورتی
که به source آنها نگاه کنیم هیچ کد PHP ای دیده نمی شود،
بلکه تنها کدهای HTML دیده می شوند، بدین معنی که  Apache کدهای PHP را به HTML
تبدیل می کند. کدهای PHP در قالبی به صورت زیر و در بین تگ body نوشته می شوند:</p>

<div class="highlight"><pre><code class="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;body&gt;</span>


<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div>


<h3>گرامر کلی زبان PHP</h3>

<p>شما می توانید کد PHP را در هر ویرایشگری بنویسید. این کد با تگ  <strong> php?> </strong> آغاز
و با تگ <strong> &lt;? </strong> خاتمه می یابد:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="err">کدهای</span> <span class="nx">PHP</span> <span class="err">در</span> <span class="err">این</span> <span class="err">قسمت</span> <span class="err">نوشته</span> <span class="err">می</span> <span class="err">شوند</span><span class="c1">//</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p>همانطور که پیش از این گفته شد، پسوند پیش فرض فایل های <strong>php</strong> ، PHP<strong>.</strong> می باشد. به طور کلی هر فایل PHP شامل تگ های HTML و کدهای اسکریپتی PHP می باشد. در زیر مثال ساده ای از یک فایل PHP آورده شده است.</p>

<p><strong>مثال: </strong>کد PHPای بنویسید که کلمه <em>!Hello World</em> را در سرور چاپ کند:</p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
    <span class="k">echo</span> <span class="s2">&quot;Hello World!&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong> نتیجه اجرا: </strong></p>

<div class="highlight"><pre><code class="sh">Hello World!
</code></pre></div>


<p>هر خط کد در PHP می بایست با یک علامت <strong> ; </strong> خاتمه یابد. علامت <strong> ; </strong> یک جداکننده می باشد
و به منظور جدا سازی مجموعه ای از دستورالعمل ها از یکدیگر به کار می رود.</p>

<p>در PHP دو روش برای چاپ متن در مرورگر وجود دارد: <strong> echo </strong> و <strong> print </strong></p>

<h3>نوشتن توضیحات در PHP</h3>

<p>توضیحات دستوراتی هستند که کامپایلر (برنامه یا مجموعه‌ای از برنامه‌های کامپیوتری
است که متنی از زبان برنامه نویسی سطح بالا (زبان مبدا) را به زبانی سطح پایین
(زبان مقصد)، مثل اسمبلی یا زبان سطح ماشین، تبدیل می‌کند. خروجی این برنامه ممکن است
برای پردازش شدن توسط برنامه دیگری مثل پیونددهنده مناسب باشد یا فایل متنی باشد
 که انسان نیز بتواند آنرا بخواند.)با رسیدن به آنها، دستورات را نادیده گرفته و
آنها را اجرا نمی کند. برای نوشتن توضیحات تک خطی درPHP می توان از علامت <strong> // </strong>
در ابتدای توضیح استفاده نمود و برای نوشتن توضیحات چند خطی می توان در اولین خط از دستورات
از علامت <strong> */ </strong> و در پایان از علامت <strong> /* </strong> استفاده نمود.</p>

<p><strong> مثال: </strong></p>

<div class="highlight"><pre><code class="php"><span class="cp">&lt;?php</span>
<span class="c1">// توضیحات تک خطی در PHP</span>

<span class="cm">/*</span>
<span class="cm">توضیحات بلوکی یا چند خطی در php</span>
<span class="cm">*/</span>
<span class="k">echo</span> <span class="s2">&quot;Hello World!&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</code></pre></div>


<p><strong>نتیجه اجرا:</strong></p>

<div class="highlight"><pre><code class="sh">Hello World!
</code></pre></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مفاهیم پایه ای PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/10/php-fundamental/"/>
    <updated>2013-08-10T13:56:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/10/php-fundamental</id>
    <content type="html"><![CDATA[<h2>مقدمه ای بر زبان PHP</h2>

<h3>PHP چیست؟</h3>

<p>زبان PHP یک زبان اسکریپتی تحت سرور و همچنین ابزار قدرتمندی برای ساخت صفحات وب پویا می باشد.
این زبان، زبانی رایگان و بازمتن مورد استفاده همگانی و بسیار کاربردی می باشد و رقیبی قوی برای
سایر زبان های مورد استفاده در زمینه تولید صفحات وب می باشد.</p>

<h3>یک فایل PHP شامل چه مواردی است؟</h3>

<p>فایل های PHP می توانند شامل متن، کدهای HTML، JavaScript و کد PHP باشند.کدهای PHP قابلیت اجرا بر روی هر سروری را دارند
و نتیجه آنها در مرورگر  به صورت HTML برگردانده می شود. تمامی فایل های زبان PHP دارای پسوند <strong> php. </strong> می باشد.</p>

<h3>قابلیت های PHP:</h3>

<ul>
<li>ایجاد صفحات پویای وب</li>
<li>ایجاد، باز کردن، نوشتن، خواندن و بستن فایل های موجود بر روی سرور</li>
<li>جمع آوری داده های فرم</li>
<li>ارسال و دریافت کوکی ها</li>
<li>اضافه کردن، حذف کردن و تغییر دادن اطلاعات در پایگاه داده</li>
<li>محدود کردن دسترسی کاربران برای دسترسی به صفحات وب</li>
<li>رمزگشایی  داده ها و اطلاعات</li>
</ul>


<p>لازم به ذکر است که شما با استفاده از PHP می توانید علاوه بر خروجی های HTML
خروجی هایی مانند عکس، فایل پی دی اف و حتی فیلم های ساخته شده با
نرم افزار فلش، داشته باشید. زبان PHP همچنین می تواند خروجی های متنی مانند XHTML و XML داشته باشد.</p>

<h3>چرا از زبان PHP استفاده می کنیم؟</h3>

<ul>
<li>زبان PHP بر روی سیستم عامل های مختلفی (از جمله Windows, Linux, Unix, Mac OS X و غیره) اجرا می شود.</li>
<li>زبان PHP تقریبا با تمامی سرورهایی که امروزه استفاده می شوند، سازگار می باشد.</li>
<li>زبان PHP از محدوده گسترده ای از پایگاه  داده ها پشتیسانی می کند.</li>
<li>یادگیری زبان PHP آسان است و به صورت کارا بر روی سرور اجرا می شود.</li>
</ul>


<h2>نحوه نصب PHP:</h2>

<h3>آموزش نصب</h3>

<p>برای شروع استفاده از PHP می توانید یکی از دو روش زیر را استفاده کنید:</p>

<ul>
<li>استفاده از یک میزبان وب ای که از PHP وپایگاه داده پشتیبانی می کند.</li>
<li>نصب یک وب سرور بر روی کامپیوتر شخصی خودتان و سپس نصب PHP و MySQL بر روی آن</li>
</ul>


<h4>استفاده از یک میزبان وبی که از PHP و MySQL پشتیبانی می کند</h4>

<p>در این روش، درصورتیکه سرور شما از PHP پشتیبانی می کند، لازم نیست هیچ کاری انجام
دهید. کافیست فایل های PHP خود را که دارای پسوند <strong> php.</strong> هستند را در پوشه وب
بسازید، سرور به طور اتوماتیک این فایل ها را برای شما اجرا می کند.
همچنین در این روش نیازی نیست که هیچ ابزار اضافی را بر روی سیستم خود نصب کنید.</p>

<h4>راه اندازی سرور محلی</h4>

<p>همانطور که گفته شد PHP یک زبان برنامه نویسی تحت وب است و برای راه اندازی آن
از یک وب سرور استفاده می کنیم. وب سروری که برای PHP استفاده می کنیم، آپاچی است.
کدهای PHP را می توان در هر editor ای نوشت (مانند notepad و ++notepadd).</p>

<p>نصب وب سرور را باید با دقت لازم انجام شود و حتی اگر یکی از مراحل به اشتباه انجام شود،
ممکن است مجبور شوید تمام مراحل را از ابتدا انجام دهید. البته برنامه های سرویس دهنده
ای (مانند WAMP، EasyPHP، PHPtraid، XAMPP و SQLware) وجود دارند که تمام امکانات لازم
برای اجرای برنامه ها را بدون دردسر در اختیار کاربران قرار می دهند. از بین این
برنامه ها، سرویس دهنده WAMP و XAMPP از محبوبیت بسیار زیادی بین برنامه نویسان PHP برخوردارند.
 هنگامی که یکی از سرویس دهند های فوق را نصب می کنید دیگر لازم نیست Apache و MySQL را نصب کنید.
این سرویس دهنده ها خودشان تنظیمات میان PHP و Apache را انجام می دهند.</p>

<h4>راه اندازی WAMP SERVER</h4>

<p>پس از دانلود این برنامه آن را روی سیستم خود نصب نمایید. در یکی از مراحل نصب
این برنامه، کادری ظاهر می شود که در آن می بایست مسیر ریشه برای قرار دادن
فایل های مربوط به سایت تعیین شود، به طور پیش فرض این مسیر در شاخه نصب WAMP
و در پوشه www انتخاب شده است.</p>

<p>نکته: این مسیر را به خاطر بسپارید، زیرا از این پس برای اینکه بتوانید برنامه های
خود را اجرا کنید، حتماً باید آنها را در این پوشه ذخیره کنید.
پس از نصب WAMP، روی ناحیه تذکر از نوار وظیفه یک آیکن به شکل نیم دایره سفید ظاهر می شود.</p>

<p><img src="http://tutors.github.io/images/php/fundamental/wamp_0.png" title="&#34;شکل ۱: سرویس دهنده WAMP&#34;" alt="&#34;شکل ۱: سرویس دهنده WAMP&#34;"></p>

<p>شکل 1: سرویس دهنده WAMP</p>

<p>ظاهر شدن این آیکن با رنگ های قرمز با زرد به این معناست که سرویس ها به طور کامل
در حال اجرا نیستند و یا اینکه به درستی عمل نمی کنند. در این صورت برای اجرای
مجدد سرویس ها روی آیکن نیم دایره کلیک کنید. به شکل 1 توجه کنید،علامت مثلث کنار
سرویس های Apache و MySQL به معنای این است که سرویس در حال اجراست. در صورتیکه
این علامت به مربع تبدیل شود به معنای توقف سرویس هاست. در این صورت برای اجرای
سرویس روی گزینه  Start/Resume Serviceکلیک کنید.</p>

<p>پس از نصب برنامه WAMP می توانید عملیات برنامه نویسی در PHP را آغاز کنید و
پس از ذخیره هر برنامه، اجرای آن را توسط مرورگر مشاهده کنید.</p>

<h3>نصب یک وب سرور بر روی کامپیوتر شخصی</h3>

<p>درصورتیکه کامپیوتر یا سرور شما از PHP پشتیبانی نمی کند، باید موارد زیر را بر روی آن نصب کنید:</p>

<ul>
<li>وب سرور</li>
<li>زبان PHP</li>
<li>یک پایگاه داده مانند MySQL</li>
</ul>


<p>در صورت عدم استفاده از WAMP یا سرویس دهنده های مشابه، باید PHP، Apache و MySQL را یکی پس از دیگری نصب وپیکر بندی نمایید.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مشارکت در توسعه سایت]]></title>
    <link href="http://tutors.github.io/blog/2013/08/05/how-to-contirbute/"/>
    <updated>2013-08-05T03:33:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/05/how-to-contirbute</id>
    <content type="html"><![CDATA[<h2>مشارکت در توسعه توتورز</h2>

<p>سایت <a href="http://tutors.github.io">توتورز</a> به صورت گروهی و با همکاری ما و شما، تهیه و تدوین می شود. شما با هر دانش و سلیقه ای می توانید در توسعه ی آن نقش داشته باشید. این توسعه شامل اعمال تغییرات کوچک مانند گرفتن اشکالات ویرایشی و ارسال نظر برای ایجاد مطالب جدید یا حتی ارسال یک مطلب به توتورز می باشد.</p>

<p>سایت توتورز به صورت کاملا اوپن سورس گسترش می یابد و شما می توانید به تمام سورس، مطالب و منابع آن دسترسی داشته باشید.
ما توسعه دهندگان توتورز و شما همراهان توتورز خوشحالیم که می خواهیم گامی هر چند کوچک در راه آموزش، انتقال تجربیات و دانش برای هم و در کنار هم بر داریم.</p>

<p>برای آشنایی با روش های مختلف توسعه توتورز می توانید به <a href="http://tutors.github.io/contribution">توسعه توتورز</a> مراجعه کنید.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[اولین پست]]></title>
    <link href="http://tutors.github.io/blog/2013/08/03/first-post/"/>
    <updated>2013-08-03T22:36:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/03/first-post</id>
    <content type="html"><![CDATA[<p>این پست آزمایشی است.</p>
]]></content>
  </entry>
  
</feed>
